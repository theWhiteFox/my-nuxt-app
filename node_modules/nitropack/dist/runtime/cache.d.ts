import type { Handler } from 'h3';
export interface CacheEntry {
    value?: any;
    expires?: number;
    mtime?: number;
    integrity?: string;
}
export interface CachifyOptions {
    name: string;
    getKey?: (...args: any[]) => string;
    transform?: (entry: CacheEntry, ...args: any[]) => any;
    group?: string;
    integrity?: any;
    ttl?: number;
    swr?: boolean;
    base?: string;
}
export declare function cachify(fn: ((...args: any[]) => any), opts: CachifyOptions): (...args: any[]) => Promise<any>;
export declare function cachifyHandle(handler: Handler, opts?: Omit<CachifyOptions, 'getKey'>): (...args: any[]) => Promise<any>;
