import { r as resolve } from './index3.mjs';
import { c as consola } from './consola.mjs';
import { w as writeTypes } from './prepare.mjs';
import { l as loadKit } from './kit.mjs';
import { c as clearDir } from './fs.mjs';
import { d as defineNuxtCommand } from './index.mjs';
import 'path';
import './_commonjsHelpers.mjs';
import 'util';
import 'fs';
import 'os';
import 'tty';
import './cjs.mjs';
import 'module';
import 'url';
import './rimraf.mjs';
import 'assert';

const build = defineNuxtCommand({
  meta: {
    name: "build",
    usage: "npx nuxi build [rootDir]",
    description: "Build nuxt for production deployment"
  },
  async invoke(args) {
    process.env.NODE_ENV = process.env.NODE_ENV || "production";
    const rootDir = resolve(args._[0] || ".");
    const { loadNuxt, buildNuxt } = await loadKit(rootDir);
    const nuxt = await loadNuxt({ rootDir });
    await clearDir(nuxt.options.buildDir);
    await writeTypes(nuxt);
    nuxt.hook("build:error", (err) => {
      consola.error("Nuxt Build Error:", err);
      process.exit(1);
    });
    await buildNuxt(nuxt);
  }
});

export { build as default };
