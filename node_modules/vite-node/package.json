{
  "name": "vite-node",
  "version": "0.8.2",
  "description": "Vite as Node.js runtime",
  "homepage": "https://github.com/vitest-dev/vitest/blob/main/packages/vite-node#readme",
  "bugs": {
    "url": "https://github.com/vitest-dev/vitest/issues"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/vitest-dev/vitest.git",
    "directory": "packages/vite-node"
  },
  "funding": "https://github.com/sponsors/antfu",
  "author": "Anthony Fu <anthonyfu117@hotmail.com>",
  "type": "module",
  "files": [
    "dist",
    "*.d.ts",
    "*.mjs"
  ],
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "require": "./dist/index.cjs",
      "types": "./dist/index.d.ts"
    },
    "./client": {
      "import": "./dist/client.js",
      "require": "./dist/client.cjs",
      "types": "./dist/client.d.ts"
    },
    "./server": {
      "import": "./dist/server.js",
      "require": "./dist/server.cjs",
      "types": "./dist/server.d.ts"
    },
    "./utils": {
      "import": "./dist/utils.js",
      "require": "./dist/utils.cjs",
      "types": "./dist/utils.d.ts"
    }
  },
  "main": "./dist/index.js",
  "module": "./dist/index.js",
  "types": "./dist/index.d.ts",
  "bin": {
    "vite-node": "./vite-node.mjs"
  },
  "typesVersions": {
    "*": {
      "*": [
        "./dist/*",
        "./dist/index.d.ts"
      ]
    }
  },
  "dependencies": {
    "kolorist": "^1.5.1",
    "minimist": "^1.2.6",
    "mlly": "^0.5.1",
    "pathe": "^0.2.0",
    "vite": "^2.8.6"
  },
  "devDependencies": {
    "@types/minimist": "^1.2.2",
    "rollup": "^2.70.1"
  },
  "engines": {
    "node": ">=v14.16.0"
  },
  "scripts": {
    "build": "rimraf dist && rollup -c",
    "dev": "rollup -c --watch --watch.include=src/**",
    "typecheck": "tsc --noEmit"
  },
  "readme": "# vite-node\n\n[![NPM version](https://img.shields.io/npm/v/vite-node?color=a1b858&label=)](https://www.npmjs.com/package/vite-node)\n\nVite as Node runtime. The engine powers [Vitest](https://github.com/vitest-dev/vitest).\n\n## Features\n\n- Out-of-box ESM & TypeScript support (possible for more with plugins)\n- Top-level `await`\n- Vite plugins, resolve, aliasing\n- Respect `vite.config.ts`\n- Shims for `__dirname` and `__filename` in ESM\n- Access to native node modules like `fs`, `path`, etc.\n\n## CLI Usage\n\nRun JS/TS file on Node.js using Vite's resolvers and transformers.\n\n```bash\nnpx vite-node index.ts\n```\n\nOptions:\n\n```bash\nnpx vite-node -h\n```\n\n## Programmatic Usage\n\nIn Vite Node, the server and runner (client) are separated, so you can integrate them in different contexts (workers, cross-process, or remote) if needed. The demo below shows a simple example of having both (server and runner) running in the same context\n\n```ts\nimport { createServer } from 'vite'\nimport { ViteNodeServer } from 'vite-node/server'\nimport { ViteNodeRunner } from 'vite-node/client'\n\n// create vite server\nconst server = await createServer()\n// this is need to initialize the plugins\nawait server.pluginContainer.buildStart({})\n\n// create vite-node server\nconst node = new ViteNodeServer(server)\n\n// create vite-node runner\nconst runner = new ViteNodeRunner({\n  root: server.config.root,\n  base: server.config.base,\n  // when having the server and runner in a different context,\n  // you will need to handle the communication between them\n  // and pass to this function\n  fetchModule(id) {\n    return node.fetchModule(id)\n  },\n  resolveId(id, importer) {\n    return node.resolveId(id, importer)\n  },\n})\n\n// execute the file\nawait runner.executeFile('./example.ts')\n\n// close the vite server\nawait server.close()\n```\n\n## Credits\n\nBased on [@pi0](https://github.com/pi0)'s brilliant idea of having a Vite server as the on-demand transforming service for [Nuxt's Vite SSR](https://github.com/nuxt/vite/pull/201).\n\nThanks [@brillout](https://github.com/brillout) for kindly sharing this package name.\n\n## Sponsors\n\n<p align=\"center\">\n  <a href=\"https://cdn.jsdelivr.net/gh/antfu/static/sponsors.svg\">\n    <img src='https://cdn.jsdelivr.net/gh/antfu/static/sponsors.svg'/>\n  </a>\n</p>\n\n## License\n\n[MIT](./LICENSE) License Â© 2021 [Anthony Fu](https://github.com/antfu)\n"
}